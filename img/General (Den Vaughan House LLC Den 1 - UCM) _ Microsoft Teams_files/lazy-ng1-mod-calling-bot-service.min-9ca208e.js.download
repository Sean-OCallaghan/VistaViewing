webpackJsonp([29],{2424:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n(2425)},2425:function(t,e,n){"use strict";var a=this&&this.__extends||function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function a(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}();Object.defineProperty(e,"__esModule",{value:!0});var o=n(2426),l=function(t){function e(e,n){var a=t.call(this,n)||this;return a.logger=e.newLogger("CallingBotService"),a.initializeOnAppLaunchAndReinit(),a}return a(e,t),e.$inject=["loggingService","orchestrationService"],e.prototype.initializeOnAppLaunchAndReinit=function(t){this.logger.info("initializing calling bot service"),this.botInstances=new Map},e.prototype.mtmaTelemetryIdentifier=function(){return"CallingBotService"},e.prototype.cleanupOnAppTeardown=function(t){this.botInstances=void 0},e.prototype.getCachedBotInstance=function(t,e){this.logger.info("get cached bot instance for call "+t.callId+", botMri "+e);var n=this.getCachedBotData(t,e);return n&&n.callingBot},e.prototype.getBotInstance=function(t,e,n,a,o,l,r,i,c,s){var d=t.callId;this.logger.info("get bot instance for call "+d+", botMri "+e+", mode "+n+", owner "+teamspace.services.DataChannelOwnerId[a]);var h=this.getCachedBotData(t,e);return h||(this.logger.info("initializing new bot for call "+d+", botMri "+e),h={callingBot:new teamspace.services.CallingBot(t,e,n,o,l,r,i,c,s)},this.botInstances.get(d).bots.set(e,h)),h.callingBot},e.prototype.registerDataCallback=function(t,e,n,a,l){this.logger.info("register data channel callback for call "+t.callId+", botMri "+e+", channel "+n+", owner "+teamspace.services.DataChannelOwnerId[a]);var r=this.botInstances.get(t.callId);if(r){var i=r.bots.get(e);i?(i.dataChannelHandler||(this.logger.info("creating new data channel handler for call "+t.callId+", botMri "+e+", channel "+n),i.dataChannelHandler=new o.CallingBotDataChannelHandler(t,n,this.logger)),i.dataChannelHandler.addHandler(a,l)):this.logger.error("cannot find bot for call "+t.callId+", botMri "+e)}else this.logger.error("bot instance does not exist for call "+t.callId)},e.prototype.unregisterDataCallback=function(t,e,n){this.logger.info("unregister data channel callback for call "+t.callId+", botMri "+e+", owner "+teamspace.services.DataChannelOwnerId[n]);var a=this.botInstances.get(t.callId);if(a){var o=a.bots.get(e);o?o.dataChannelHandler?0===o.dataChannelHandler.removeHandler(n)&&(this.logger.info("no more data channel registrations, call "+t.callId+", botMri "+e),o.dataChannelHandler.dispose(),o.dataChannelHandler=void 0):this.logger.warn("data channel handler does not exist for call "+t.callId+", botMri "+e):this.logger.warn("cannot find bot for call "+t.callId+", botMri "+e)}else this.logger.warn("bot instance does not exist for call "+t.callId)},e.prototype.getCachedBotData=function(t,e){var n=this,a=t.callId,o=this.botInstances.get(a);return o||(this.logger.info("creating new bot instance for call "+a),o={bots:new Map,callStateSubscription:t.on("callStateChanged",function(){return n.onCallStateChanged(t)}),callIdSubscription:t.on("callIdChanged",function(e){return n.onCallIdChanged(t,a,e)})},this.botInstances.set(a,o)),o.bots.get(e)},e.prototype.onCallStateChanged=function(t){if(7===t.state){this.logger.info("call "+t.callId+" is disconnected, cleaning up bot instances and data channel registrations");var e=this.botInstances.get(t.callId);if(!e)return;e.bots.forEach(function(t,e){t.dataChannelHandler&&(t.dataChannelHandler.dispose(),t.dataChannelHandler=void 0),t.callingBot.dispose()}),e.bots.clear(),e.callStateSubscription.dispose(),e.callStateSubscription=void 0,e.callIdSubscription.dispose(),e.callIdSubscription=void 0,this.botInstances.delete(t.callId)}},e.prototype.onCallIdChanged=function(t,e,n){this.logger.info("callId changed from "+e+" to "+n+", updating database");var a=this.botInstances.get(e);a&&(this.botInstances.set(n,a),this.botInstances.delete(e))},e}(teamspace.services.MTMABase);e.CallingBotService=l,angular.module("teamspace.callingBotService",["teamspace.loggingService","teamspace.constants","teamspace.orchestrationService"]).service("callingBotService",l)},2426:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e,n){this.call=t,this.channelId=e,this.logger=n,n.info("["+t.callId+"]["+e+"] initializing data channel handler"),this.callingBotDataChannelRegistrations=[],t.dataChannelAdapter.addHandler(e,this).catch(function(a){return n.error("["+t.callId+"] data channel addHandler is failed for channel "+e+" with error "+a)})}return t.prototype.addHandler=function(t,e){-1===this.callingBotDataChannelRegistrations.findIndex(function(e){return e.ownerId===t})&&this.callingBotDataChannelRegistrations.push({ownerId:t,handler:e})},t.prototype.removeHandler=function(t){return this.callingBotDataChannelRegistrations=this.callingBotDataChannelRegistrations.filter(function(e){return e.ownerId!==t}),this.callingBotDataChannelRegistrations.length},t.prototype.dispose=function(){var t=this;this.logger.info("["+this.call.callId+"]["+this.channelId+"] cleaning up data channel handler"),this.call.dataChannelAdapter&&this.call.dataChannelAdapter.removeHandler(this.channelId).catch(function(e){return t.logger.error("["+t.call.callId+"]["+t.channelId+"] data channel removeHandler is failed with error "+e)}),this.callingBotDataChannelRegistrations=null},t.prototype.onStarted=function(t,e){return Promise.resolve()},t.prototype.onStopped=function(t){return Promise.resolve()},t.prototype.onDataReceived=function(t,e,n){var a;try{a=JSON.parse(e.toString())}catch(t){try{var o=(new TextDecoder).decode(e);a=JSON.parse(o)}catch(t){return this.logger.error("["+this.call.callId+"]["+this.channelId+"] failed to parse data channel response, error "+t),Promise.reject(t)}}if(a.events)for(var l=0,r=a.events;l<r.length;l++){var i=r[l];this.sendData(teamspace.services.CallingBotDataType.Event,i)}if(a.recognitionResults)for(var c=0,s=a.recognitionResults;c<s.length;c++){var d=s[c];this.sendData(teamspace.services.CallingBotDataType.Caption,d)}return Promise.resolve()},t.prototype.sendData=function(t,e){for(var n=0,a=this.callingBotDataChannelRegistrations;n<a.length;n++){var o=a[n];this.logger.debug("["+this.call.callId+"]["+this.channelId+"] data channel callback for "+teamspace.services.DataChannelOwnerId[o.ownerId]),o.handler(t,e)}},t}();e.CallingBotDataChannelHandler=a}},[2424]);